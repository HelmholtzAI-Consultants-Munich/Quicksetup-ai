# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = {{cookiecutter.project_slug}}
description = {{cookiecutter.project_short_description}}
author = {{cookiecutter.author_name}}
author_email = {{cookiecutter.email}}
license = {{cookiecutter.open_source_license}}
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/pyscaffold/pyscaffold/
# Add here related links, for example:
project_urls =
    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    black           # code formatting
    flake8          # code analysis
    hydra-colorlog>=1.1.0

    # --------- hydra --------- #
    hydra-core>=1.1.0
    hydra-optuna-sweeper>=1.1.0
    isort           # import sorting

    # --------- loggers --------- #
    # wandb
    # neptune-client
    mlflow
    nbstripout      # remove output from jupyter notebooks
    # comet-ml
    # tensorboard

    # --------- linters --------- #
    pre-commit      # hooks for applying linters on commit
    pudb            # debugger
    pytest          # tests

    # --------- others --------- #
    python-dotenv   # loading env variables from .env file
    pytorch-lightning==1.5.10
    rich            # beautiful text formatting in terminal
    sh              # for running bash commands in some tests
    dvc             # data version control
    # --------- pytorch --------- #
    torch==1.11.0
    torchmetrics==0.7.0
    torchvision==0.12.0


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install ML-Pipeline-Template[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = {{cookiecutter.project_slug}}.utils.dvc_utils:function
# For example:
console_scripts =
     save_initial_data = {{cookiecutter.project_slug}}.utils.dvc_utils:save_initial_data
     save_data_version = {{cookiecutter.project_slug}}.utils.dvc_utils:save_data_version
     switch_to_data_version = {{cookiecutter.project_slug}}.utils.dvc_utils:switch_to_data_version
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
testpaths = ["tests/shell", "tests/unit"]
log_cli = True
markers =
    slow
addopts =
    --durations=0
    --strict-markers
    --doctest-modules
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning


[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel


[flake8]
max_line_length = 99
show_source = True
format = pylint
ignore =
    F401  # Module imported but unused
    W504  # Line break occurred after a binary operator
    F841  # Local variable name is assigned to but never used
    E501  # Line too long
exclude =
    .git
    __pycache__
    data/*
    tests/*
    notebooks/*
    logs/*
    .tox
    build
    dist
    .eggs
    docs/conf.py


[isort]
line_length = 99
profile = black
filter_files = True


[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1.1
package = {{cookiecutter.project_slug}}
extensions =
    dsproject
    no_skeleton
    pre_commit
